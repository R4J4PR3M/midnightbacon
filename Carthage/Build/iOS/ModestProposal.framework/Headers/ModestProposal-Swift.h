// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSData (SWIFT_EXTENSION(ModestProposal))
+ (NSData * __nullable)formURLEncodeParameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters encoding:(NSUInteger)encoding;
@end


@interface NSData (SWIFT_EXTENSION(ModestProposal))
@property (nonatomic, readonly, copy) NSString * __nullable UTF8String;
@end


@interface NSHTTPURLResponse (SWIFT_EXTENSION(ModestProposal))
- (NSString * __nullable)objectForKeyedSubscript:(NSString * __nonnull)field;
- (BOOL)hasHeader:(NSString * __nonnull)field;
@property (nonatomic, readonly) BOOL isOK;
@property (nonatomic, readonly) BOOL isSuccessful;
- (BOOL)isStatus:(NSInteger)code;
- (BOOL)matchesStatuses:(NSArray<NSNumber *> * __nonnull)codes;
@property (nonatomic, readonly) BOOL isJSON;
@property (nonatomic, readonly) BOOL isImage;
- (BOOL)isContentType:(NSString * __nonnull)type;
- (BOOL)matchesContentTypes:(NSArray<NSString *> * __nonnull)types;
@end


@interface NSMutableURLRequest (SWIFT_EXTENSION(ModestProposal))
- (BOOL)basicAuthorizationWithUsername:(NSString * __nonnull)username password:(NSString * __nonnull)password encoding:(NSUInteger)encoding error:(NSError * __nullable * __null_unspecified)error;
- (NSString * __nullable)objectForKeyedSubscript:(NSString * __nonnull)field;
- (void)setObject:(NSString * __nullable)newValue forKeyedSubscript:(NSString * __nonnull)field;
@end


@interface NSURL (SWIFT_EXTENSION(ModestProposal))
- (NSURL * __nonnull)relativeToPath:(NSString * __nonnull)path parameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * __nonnull parameters;
@end


@interface NSURLComponents (SWIFT_EXTENSION(ModestProposal))
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * __nonnull parameters;
@end


@interface NSURLRequest (SWIFT_EXTENSION(ModestProposal))
- (NSMutableURLRequest * __nonnull)DELETEWithPath:(NSString * __nonnull)path parameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters;
- (NSMutableURLRequest * __nonnull)GETWithPath:(NSString * __nonnull)path parameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters;
- (NSMutableURLRequest * __nonnull)POSTWithPath:(NSString * __nonnull)path JSONObject:(id __nonnull)JSONObject;
- (NSMutableURLRequest * __nonnull)POSTWithPath:(NSString * __nonnull)path parameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters encoding:(NSUInteger)encoding;
- (NSMutableURLRequest * __nonnull)PUTWithPath:(NSString * __nonnull)path JSONObject:(id __nonnull)JSONObject;
- (NSMutableURLRequest * __nonnull)PUTWithPath:(NSString * __nonnull)path parameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters encoding:(NSUInteger)encoding;
- (NSMutableURLRequest * __nonnull)requestHTTPMethod:(NSString * __nonnull)method path:(NSString * __nonnull)path parameters:(NSDictionary<NSString *, NSString *> * __nonnull)parameters body:(NSData * __nullable)body contentType:(NSString * __nullable)contentType;
@end


@interface NSURLResponse (SWIFT_EXTENSION(ModestProposal))
@property (nonatomic, readonly) BOOL isHTTP;
@property (nonatomic, readonly, strong) NSHTTPURLResponse * __nonnull HTTP;
- (BOOL)validateIsHTTPWithStatusCode:(NSInteger)statusCode contentType:(NSString * __nonnull)contentType error:(NSError * __nullable * __null_unspecified)error;
- (BOOL)validateIsSuccessfulJSONAndReturnError:(NSError * __nullable * __null_unspecified)error;
- (BOOL)validateIsSuccessfulImageAndReturnError:(NSError * __nullable * __null_unspecified)error;
@end

#pragma clang diagnostic pop
